package GUI;

/**
 *
 * @author Sherry Zhuang
 */

//Imports
import DB.property;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.sun.glass.events.KeyEvent;

//Class to display manage property page
public class manageProperty extends javax.swing.JFrame
{
    //Create instance
    property p = new property();
    DefaultTableModel model;
    int rowIndex;
    
    //Create form
    public manageProperty()
    {
        initComponents();
        //Fill table
        p.fillPropertyJtable(jTable, "");
        //Set model
        model = (DefaultTableModel) jTable.getModel();
        //Set table attributes
        jTable.setRowHeight(30);
        jTable.setShowGrid(true);
        jTable.setGridColor(Color.blue);
        jTable.setSelectionBackground(Color.BLACK);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel = new javax.swing.JPanel();
        jLabel_Title = new javax.swing.JLabel();
        jLabel_St = new javax.swing.JLabel();
        jLabel_City = new javax.swing.JLabel();
        jLabel_State = new javax.swing.JLabel();
        jLabel_Country = new javax.swing.JLabel();
        jTextField_St = new javax.swing.JTextField();
        jTextField_City = new javax.swing.JTextField();
        jTextField_State = new javax.swing.JTextField();
        jButton_Edit = new javax.swing.JButton();
        jButton_Remove = new javax.swing.JButton();
        jLabel_Search = new javax.swing.JLabel();
        jTextField_Search = new javax.swing.JTextField();
        jTextField_ID = new javax.swing.JTextField();
        jLabel_ID = new javax.swing.JLabel();
        jTextField_ZIP = new javax.swing.JTextField();
        jTextField_Country = new javax.swing.JTextField();
        jLabel_ZIP = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setBackground(new java.awt.Color(153, 204, 255));

        jLabel_Title.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel_Title.setText("Manage Property");

        jLabel_St.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_St.setText("Street");

        jLabel_City.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_City.setText("City");

        jLabel_State.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_State.setText("State");

        jLabel_Country.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_Country.setText("Country");

        jTextField_St.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_St.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextField_StKeyTyped(evt);
            }
        });

        jTextField_City.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_City.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextField_CityKeyTyped(evt);
            }
        });

        jTextField_State.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_State.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextField_StateKeyTyped(evt);
            }
        });

        jButton_Edit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Edit.setText("Edit");
        jButton_Edit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_EditActionPerformed(evt);
            }
        });

        jButton_Remove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Remove.setText("Remove");
        jButton_Remove.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_RemoveActionPerformed(evt);
            }
        });

        jLabel_Search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_Search.setText("Search");

        jTextField_Search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_Search.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextField_SearchKeyReleased(evt);
            }
        });

        jTextField_ID.setEditable(false);
        jTextField_ID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_ID.setText("ID");

        jTextField_ZIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_ZIP.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextField_ZIPKeyTyped(evt);
            }
        });

        jTextField_Country.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_Country.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextField_CountryKeyTyped(evt);
            }
        });

        jLabel_ZIP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_ZIP.setText("ZIP");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "Street", "City", "State", "Country", "ZIP"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTableMouseClicked(evt);
            }
        });
        jTable.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0)
        {
            jTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable.getColumnModel().getColumn(5).setPreferredWidth(45);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(jLabel_Title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel_City)
                                    .addComponent(jLabel_St))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField_St, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_City, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel_State)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_State, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelLayout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel_Country)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField_Country, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel_ZIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(jButton_Remove)
                                .addGap(30, 30, 30)
                                .addComponent(jButton_Edit)
                                .addGap(27, 27, 27))
                            .addComponent(jTextField_ZIP, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel_Title)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_ID))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_St)
                            .addComponent(jTextField_St, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_City)
                            .addComponent(jTextField_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_State)
                            .addComponent(jTextField_State, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Country))
                        .addGap(26, 26, 26)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_ZIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_ZIP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Search)
                            .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Method to verify field
    public boolean verify()
    {
        if (jTextField_St.getText().equals("")
                || jTextField_City.getText().equals("")
                || jTextField_State.getText().equals("")
                || jTextField_Country.getText().equals("")
                || jTextField_ZIP.getText().equals("")
                || jTextField_ID.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "One or More Empty Field(s).");
            return false;
        } else
        {
            return true;
        }
    }
    //Method to limit field
    private void jTextField_StKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_StKeyTyped
    {//GEN-HEADEREND:event_jTextField_StKeyTyped
        if (jTextField_St.getText().length() > 98)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_StKeyTyped
    //Method to validate and limit field
    private void jTextField_CityKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_CityKeyTyped
    {//GEN-HEADEREND:event_jTextField_CityKeyTyped
        if (Character.isDigit(evt.getKeyChar())
                || jTextField_City.getText().length() > 48)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_CityKeyTyped
    //Method to validate and limit field
    private void jTextField_StateKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_StateKeyTyped
    {//GEN-HEADEREND:event_jTextField_StateKeyTyped
        if (Character.isDigit(evt.getKeyChar())
                || jTextField_State.getText().length() > 18)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_StateKeyTyped
    //Method to edit entry
    private void jButton_EditActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_EditActionPerformed
    {//GEN-HEADEREND:event_jButton_EditActionPerformed
        //Get text of fields
        String st = jTextField_St.getText();
        String city = jTextField_City.getText();
        String state = jTextField_State.getText();
        String country = jTextField_Country.getText();
        String zip = jTextField_ZIP.getText();
        int id = Integer.valueOf(jTextField_ID.getText());
        
        //Verify selection
        if (verify())
        {
            //Update data
            p.insertUpdateDeleteProperty('u', id, st, city, state, country, zip);
            //Set text of fields after update
            jTextField_ID.setText("");
            jTextField_St.setText("");
            jTextField_City.setText("");
            jTextField_State.setText("");
            jTextField_Country.setText("");
            jTextField_ZIP.setText("");
            jTextField_Search.setText("");

            // refresh jtable
            jTable.setModel(new DefaultTableModel(null, new Object[]
            {
                "ID", "Street", "City", "State", "Country", "ZIP"
            }));
            p.fillPropertyJtable(jTable, "");

        }
    }//GEN-LAST:event_jButton_EditActionPerformed
    //Method to remove entry
    private void jButton_RemoveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_RemoveActionPerformed
    {//GEN-HEADEREND:event_jButton_RemoveActionPerformed
        //Verify selection
        if (jTextField_ID.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No Property Selected.");
        } else
        {
            int id = Integer.valueOf(jTextField_ID.getText());
            //Delete data
            p.insertUpdateDeleteProperty('d', id, null, null, null, null, null);
            p.fillPropertyJtable(jTable, "");
            
            //Refresh table
            jTable.setModel(new DefaultTableModel(null, new Object[]
            {
                "ID", "Street", "City", "State", "Country", "ZIP"
            }));
            p.fillPropertyJtable(jTable, jTextField_Search.getText());
            
            //Set text of fields after delete
            jTextField_ID.setText("");
            jTextField_St.setText("");
            jTextField_City.setText("");
            jTextField_State.setText("");
            jTextField_Country.setText("");
            jTextField_ZIP.setText("");
            jTextField_Search.setText("");
        }
    }//GEN-LAST:event_jButton_RemoveActionPerformed
   //Method to search
    private void jTextField_SearchKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_SearchKeyReleased
    {//GEN-HEADEREND:event_jTextField_SearchKeyReleased
        jTable.setModel(new DefaultTableModel(null, new Object[]
        {
            "ID", "Street", "City", "State", "Country", "ZIP"
        }));
        //Fill table with relevant results
        p.fillPropertyJtable(jTable, jTextField_Search.getText());
    }//GEN-LAST:event_jTextField_SearchKeyReleased
    //Method to validate and limit field
    private void jTextField_ZIPKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_ZIPKeyTyped
    {//GEN-HEADEREND:event_jTextField_ZIPKeyTyped
        if (!Character.isDigit(evt.getKeyChar())
                || jTextField_ZIP.getText().length() > 8)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_ZIPKeyTyped
    //Method to validate and limit field
    private void jTextField_CountryKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextField_CountryKeyTyped
    {//GEN-HEADEREND:event_jTextField_CountryKeyTyped
        if (Character.isDigit(evt.getKeyChar())
                || jTextField_Country.getText().length() > 9)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_CountryKeyTyped
    //Method to fill fields if entry clicked
    private void jTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableMouseClicked
    {//GEN-HEADEREND:event_jTableMouseClicked
        model = (DefaultTableModel) jTable.getModel();

        rowIndex = jTable.getSelectedRow();
        //Get info of entry
        jTextField_ID.setText(model.getValueAt(rowIndex, 0).toString());
        jTextField_St.setText(model.getValueAt(rowIndex, 1).toString());
        jTextField_City.setText(model.getValueAt(rowIndex, 2).toString());
        jTextField_State.setText(model.getValueAt(rowIndex, 3).toString());
        jTextField_Country.setText(model.getValueAt(rowIndex, 4).toString());
        jTextField_ZIP.setText(model.getValueAt(rowIndex, 5).toString());
    }//GEN-LAST:event_jTableMouseClicked
    //Method to fill fields if entry selected by up down on keyboard
    private void jTableKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTableKeyReleased
    {//GEN-HEADEREND:event_jTableKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_UP
            || evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            rowIndex = jTable.getSelectedRow();
            //Get info of entry
            jTextField_ID.setText(model.getValueAt(rowIndex, 0).toString());
            jTextField_St.setText(model.getValueAt(rowIndex, 1).toString());
            jTextField_City.setText(model.getValueAt(rowIndex, 2).toString());
            jTextField_State.setText(model.getValueAt(rowIndex, 3).toString());
            jTextField_Country.setText(model.getValueAt(rowIndex, 4).toString());
            jTextField_ZIP.setText(model.getValueAt(rowIndex, 5).toString());
        }
    }//GEN-LAST:event_jTableKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(manageProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(manageProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(manageProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(manageProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new manageProperty().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Edit;
    private javax.swing.JButton jButton_Remove;
    private javax.swing.JLabel jLabel_City;
    private javax.swing.JLabel jLabel_Country;
    private javax.swing.JLabel jLabel_ID;
    private javax.swing.JLabel jLabel_Search;
    private javax.swing.JLabel jLabel_St;
    private javax.swing.JLabel jLabel_State;
    private javax.swing.JLabel jLabel_Title;
    private javax.swing.JLabel jLabel_ZIP;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField_City;
    private javax.swing.JTextField jTextField_Country;
    private javax.swing.JTextField jTextField_ID;
    private javax.swing.JTextField jTextField_Search;
    private javax.swing.JTextField jTextField_St;
    private javax.swing.JTextField jTextField_State;
    private javax.swing.JTextField jTextField_ZIP;
    // End of variables declaration//GEN-END:variables
} //End manageProperty